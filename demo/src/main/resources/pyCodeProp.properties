importPackage=from tensorflow import keras\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D, BatchNormalization\nfrom keras.layers import GlobalAveragePooling2D\nfrom tensorflow.compat.v1 import ConfigProto\nfrom tensorflow.compat.v1 import InteractiveSession\n\n
gpuConfiguration=config = ConfigProto()\nconfig.gpu_options.allow_growth = True\nsession = InteractiveSession(config=config)\n\n
loadFile=import gzip\nimport pickle\nf = gzip.open('%s', 'rb')\n\ndata = pickle.load(f, encoding='bytes')\n\nf.close()\n(x_train, y_train), (x_test, y_test) = data\n\n
batchSize=batch_size = 
init=input_shape = (x_train.shape[1],\n               x_train.shape[2],\n               1 if len(x_train.shape) == 3 else x_train.shape[3])\nx_train = x_train.astype('float32')\nx_test = x_test.astype('float32')\nx_train /= 255\nx_test /= 255\nimg_rows, img_cols = x_train.shape[1], x_train.shape[2]\n\n
epochs=epochs = 
numClasses=\nnum_classes = %s\n
toCategorical=y_train = keras.utils.to_categorical(y_train, num_classes)\ny_test = keras.utils.to_categorical(y_test, num_classes)\n\n
addModel=model.add(
netBuild=model = Sequential()\n
summary=model.summary()\n
earlyStopping=early_stopping = keras.callbacks.EarlyStopping(
fit=history = model.fit(x_train, y_train,\n                    batch_size=batch_size,\n                    epochs=epochs,\n                    verbose=2,\n                    validation_data=(x_test, y_test)
evaluate=score = model.evaluate(x_test, y_test, verbose=0)\n\n
print=print('Test loss:', score[0])\nprint('Test accuracy:', score[1])\n\n
compile=model.compile(loss='', \n              optimizer=optimizer, \n              metrics=['accuracy'])\n\n
modelSave=model.save('C:/Users/Zarrow/IdeaProjects/SelfStudy/web_AI_springboot/demo/model.h5')\n\n
optimizer=optimizer = keras.optimizers.

pyFilePath=C:\\Users\\Zarrow\\IdeaProjects\\SelfStudy\\web_AI_springboot\\demo\\main.py
propertiesPath=C:\\Users\\Zarrow\\IdeaProjects\\SelfStudy\\web_AI_springboot\\demo\\
filePropPath=C:\\Users\\Zarrow\\IdeaProjects\\SelfStudy\\web_AI_springboot\\demo\\src\\main\\resources\\fileProp\\
propertiesPathForPyCode=C:/Users/Zarrow/IdeaProjects/SelfStudy/web_AI_springboot/demo/


plot=import matplotlib.pyplot as plt\nplt.plot(history.history['accuracy'])\nplt.plot(history.history['val_accuracy'])\nplt.title('Model accuracy')\nplt.ylabel('Accuracy')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.savefig('C:/Users/Zarrow/IdeaProjects/SelfStudy/web_AI_springboot/demo/accuracy.jpg')\n\nplt.clf()\nplt.plot(history.history['loss'])\nplt.plot(history.history['val_loss'])\nplt.title('Model loss')\nplt.ylabel('Loss')\nplt.xlabel('Epoch')\nplt.legend(['Train', 'Test'], loc='upper left')\nplt.savefig('C:/Users/Zarrow/IdeaProjects/SelfStudy/web_AI_springboot/demo/loss.jpg')\n\n\n
